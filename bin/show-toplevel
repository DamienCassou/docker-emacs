#!/usr/bin/env bash

set -Eeuo pipefail

if [ $# -lt 1 ]; then
  echo "usage: $0 IMAGE" >&2
  exit 1
fi

image="$1"
script_dir="$(dirname "$(readlink -f "$0")")"

container="$(docker run --rm -d "$image" tail -f /dev/null 2>/dev/null)"
trap "docker rm -f \"$container\" >/dev/null" EXIT

if docker exec "$container" which apk >/dev/null; then
  docker exec "$container" apk -q add --no-cache ruby
  docker cp "$script_dir/apk-toplevel" $container:/usr/local/bin/show-toplevel
elif docker exec "$container" which apt-get >/dev/null; then
  docker exec "$container" bash -c 'apt-get update && apt-get install -y python3 python3-apt' &>/dev/null
  docker cp "$script_dir/apt-toplevel" $container:/usr/local/bin/show-toplevel
else
  echo 'image OS not recognized' >&2
  exit 2
fi

docker exec "$container" show-toplevel
